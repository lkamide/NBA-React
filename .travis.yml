language: node_js
dist: trusty
node_js:
  - "8.14.1"
sudo: false

# os: osx


# env:
#   global:
#     - CXX=g++-4.8
#     - DISPLAY=:99.0
#     - CHROME_BIN=/usr/bin/google-chrome
# # installing Chrome for e2e tests
# addons:
#   apt:
#     sources:
#       - google-chrome
#     packages:
#       - google-chrome-stable
#       - oracle-java9-set-default

addons:
  google-chrome: stable


before_install:
#   - # start your web application and listen on `localhost`
  - google-chrome --headless --disable-gpu --remote-debugging-port=9222 http://localhost &
  - wget http://chromedriver.storage.googleapis.com/74.0.3729.6/chromedriver_linux64.zip
  - mkdir chromeData
  - unzip chromedriver_linux64.zip -d ./chromeData
  # - ls
#   - pwd
#   - export CHROME_BIN=chromium-browser    
  -  PATH=$PATH:/home/travis/build/lkamide/NBA-React/chromeData
  -  echo $PATH
  -  google-chrome --version
  -  sudo apt-get update -y 
  # -  sudo apt-get install google-chrome-stable
  # -  sudo apt-get upgrade -y 
  -  google-chrome --version

#   - ls /



# before_script:
#   # - export DISPLAY=:99.0
#   # - "sh -e /etc/init.d/xvfb start"
#   # - sudo apt-get install  ruby-rack -y 
#   # - sleep 3 # give xvfb some time to start
#   # - rackup  # start a Web server
#   # - sleep 3 # give Web server some time to bind to sockets, etc
#   # - chrome -v 
  
before_script:
  - chromedriver-update 73.0.3683.68
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 #wait a while before xvfb to start

script: npm test

after_script:
  - "sh -e /etc/init.d/xvfb stop"